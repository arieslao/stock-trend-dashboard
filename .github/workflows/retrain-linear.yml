name: Retrain Linear (daily)

on:
  schedule:
    - cron: "15 8 * * *"     # daily 08:15 UTC; keep or change
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Create the service-account JSON in both a temp path and gspread's default path
      - name: Create service account JSON (temp + default)
        env:
          GOOGLE_SHEETS_JSON: ${{ secrets.GOOGLE_SHEETS_JSON }}
        run: |
          set -euxo pipefail
          echo "$GOOGLE_SHEETS_JSON" > "$RUNNER_TEMP/sa.json"
          mkdir -p "$HOME/.config/gspread"
          echo "$GOOGLE_SHEETS_JSON" > "$HOME/.config/gspread/service_account.json"

      # Safety: write to a separate health tab so we never pollute the watchlist
      - name: Sanity write to Google Sheet (CI Health)
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/sa.json
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: |
          python - <<'PY'
          import os, gspread
          tab = "CI Health"
          gc = gspread.service_account(filename=os.environ["GOOGLE_APPLICATION_CREDENTIALS"])
          sh = gc.open_by_key(os.environ["SHEET_ID"])
          try:
              ws = sh.worksheet(tab)
          except Exception:
              ws = sh.add_worksheet(title=tab, rows=1000, cols=5)
          ws.append_row(["linear", "ok"])
          print(f"Wrote a row to '{tab}'")
          PY

      - name: Train (Linear) from 'watchlist_linear'
        id: train
        continue-on-error: true
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/sa.json
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: |
          set -euxo pipefail
          python train.py \
            --model linear \
            --sheet-id "$SHEET_ID" \
            --worksheet "watchlist_linear" \
            --symbol-column "Ticker" \
            --period 1y \
            --interval 1d \
            2>&1 | tee train_linear.log

      - name: Upload training log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: train-linear-log
          path: train_linear.log

      - name: Commit model artifacts
        if: steps.train.outcome == 'success'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add models/* || true
          git commit -m "Update Linear artifacts ($(date -u +%F))" || echo "No changes"
          git push
