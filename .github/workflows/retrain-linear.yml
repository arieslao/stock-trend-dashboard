name: Retrain Linear (daily)

on:
  schedule:
    # Runs every day at 08:15 UTC; adjust if you want
    - cron: "15 8 * * *"
  workflow_dispatch: {}

jobs:
  train:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # Fallback in case requirements.txt is missing
            pip install google-auth gspread pandas numpy scikit-learn
          fi

      - name: Create service account JSON file
        env:
          GOOGLE_SHEETS_JSON: ${{ secrets.GOOGLE_SHEETS_JSON }}
        run: |
          set -euxo pipefail
          echo "$GOOGLE_SHEETS_JSON" > $RUNNER_TEMP/sa.json
          python - <<'PY'
import json, os
p = os.path.join(os.environ["RUNNER_TEMP"], "sa.json")
json.load(open(p))
print("Service account JSON OK:", p)
PY

      - name: Quick environment debug
        env:
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: |
          set -euxo pipefail
          python -V
          pip list | sed -n '1,80p'
          echo "SHEET_ID length: ${#SHEET_ID:-0}"

      - name: Sanity write to Google Sheet (proves auth + sharing)
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/sa.json
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: |
          python - <<'PY'
import os, gspread
sheet_id = os.environ["SHEET_ID"]
gc = gspread.service_account(filename=os.environ["GOOGLE_APPLICATION_CREDENTIALS"])
sh = gc.open_by_key(sheet_id)
try:
    ws = sh.worksheet("Test Watchlist")
except Exception:
    ws = sh.add_worksheet(title="Test Watchlist", rows=1000, cols=26)
ws.append_row(["CI smoke test", "ok"])
print("Wrote a row to 'Test Watchlist'")
PY

      - name: Show train.py help (so we see required flags)
        run: |
          python train.py --help || true

      - name: Train (Linear) and write results
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/sa.json
          SHEET_ID: ${{ secrets.SHEET_ID }}
          FINNHUB_KEY: ${{ secrets.FINNHUB_KEY }}
        run: |
          set -euxo pipefail
          # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
          # If your script uses DIFFERENT flag names, watch the --help output
          # from the previous step and edit this command accordingly.
          # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
          python train.py \
            --model linear \
            --sheet-id "$SHEET_ID" \
            --worksheet "Test Watchlist"

      - name: Success message
        run: echo "Retrain Linear finished successfully."
